{
	"info": {
		"_postman_id": "f19f076b-756b-4d01-bbbb-4d763a3e409e",
		"name": "Test-Code",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "postman",
			"item": [
				{
					"name": "captcha",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.text())\r",
									"pm.environment.set('code',pm.response.text())"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8090/postman/captcha",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"postman",
								"captcha"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123456",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{code}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8090/postman/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"postman",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "params",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var random=Math.random();\r",
									"console.log('随机数：',random);\r",
									"pm.environment.set('random',random)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"我是一条日志-2\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8090/postman/params?text={{random}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"postman",
								"params"
							],
							"query": [
								{
									"key": "text",
									"value": "{{random}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "form",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "xiaomin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123456",
									"type": "text"
								},
								{
									"key": "code",
									"value": "7894",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8090/postman/form",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"postman",
								"form"
							]
						}
					},
					"response": []
				},
				{
					"name": "json",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"xiaomin\",\r\n  \"password\": \"123456\",\r\n  \"sex\": \"男\",\r\n  \"age\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8090/postman/json",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"postman",
								"json"
							]
						}
					},
					"response": []
				},
				{
					"name": "file",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.json())\r",
									"//根据接口返回的数据类型获取数据,json/text\r",
									"var url=pm.response.json().url\r",
									"//设置环境变量\r",
									"pm.environment.set('url',url)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/17747/Downloads/ceshi/02.jpg"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8090/postman/file",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"postman",
								"file"
							]
						}
					},
					"response": []
				},
				{
					"name": "test断言",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    var j=pm.response.json();\r",
									"    // console.log(j)\r",
									"    pm.expect(j.city).to.eql('济南')\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"2020\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8090/postman/test?num=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"postman",
								"test"
							],
							"query": [
								{
									"key": "num",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "preview",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8090/postman/preview?url={{url}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"postman",
								"preview"
							],
							"query": [
								{
									"key": "url",
									"value": "{{url}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8090/postman/weather?cityId={{city_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"postman",
								"weather"
							],
							"query": [
								{
									"key": "cityId",
									"value": "{{city_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.sendRequest('http://localhost:8090/postman/captcha', function (err, res) {",
					"    if (err) {",
					"        console.log(err);",
					"    } else {",
					"        console.log(res.text())",
					"        pm.environment.set(\"code\", res.text());",
					"    }",
					"});",
					"const LoginRequest = {",
					"  url: 'http://localhost:8090/postman/login',",
					"  method: 'POST',",
					"  header: 'Content-Type:application/json',",
					"  body: {",
					"    mode: 'raw',",
					"    raw: JSON.stringify({",
					"        'username':'admin',",
					"        'password':'123456',",
					"        'code': pm.environment.get('code')",
					"    })",
					"  }",
					"};",
					"pm.sendRequest(LoginRequest, function (err, res) {",
					"   if (err) {",
					"        console.log(err);",
					"    } else {",
					"        console.log(res.text())",
					"        pm.environment.set(\"token\", res.text());",
					"    }",
					"",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "a",
			"value": "collection"
		}
	]
}